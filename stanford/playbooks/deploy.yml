#!/usr/bin/env ansible-playbook
---
- include: ../playbooks/cluster.yml
  vars:
    CLUSTER_NAME: deploy
    CLUSTER_SECURITY_GROUPS:
      - "{{ CLUSTER_SECURITY_GROUP }}"
- name: Create the deploy box(es)
  hosts: cluster_group_launched
  gather_facts: True
  become: True
  vars:
    CLUSTER_NAME: certs
    COMMON_HOSTNAME: "deploy{{ CLUSTER_NUMBER }}.{{ COMMON_DEPLOYMENT }}.vpc"
    path_config: /opt/configuration
    path_config_src: "{{ path_config }}/src"
    repo_user: Stanford-Online
    version_config: rc
  vars_files:
    - "{{ COMMON_DEPLOYMENT_DIR }}/common.yml"
  roles:
    - common
  tasks:
    - name: Drop the /edx directory
      file:
        path: /edx
        state: absent
      tags:
        - cleanup
    - name: Simplify the message of the day
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/motd.tail
        - /etc/update-motd.d/00-header
        - /etc/update-motd.d/10-help-text
        - /etc/update-motd.d/50-landscape-sysinfo
        - /etc/update-motd.d/51-cloudguest
        - /etc/update-motd.d/91-release-upgrade
        - /etc/update-motd.d/95-hwe-eol
      tags:
        - cleanup
    - name: Checkout configuration code globally
      git:
        repo: 'https://github.com/{{ repo_user }}/configuration.git'
        dest: "{{ path_config_src }}"
        version: "{{ version_config }}"
      tags:
        - src
    - name: Install mysql-client
      apt:
        name: libmysqlclient-dev
        state: present
    - name: Install python packages globally
      pip:
        chdir: "{{ path_config_src }}"
        requirements: requirements.txt
      tags:
        - requirements
    - name: Checkout configuration code for each user (team)
      git:
        remote: origin
        repo: "https://github.com/{{ repo_user }}/configuration.git"
        dest: "/home/{{ item.name }}{{ path_config_src }}"
        version: "{{ version_config }}"
      become: true
      become_user: "{{ item.name }}"
      ignore_errors: yes
      when: item.type is defined and item.type == 'admin'
      with_items: "{{ COMMON_USER_INFO }}"
      tags:
        - users
        - src
    - name: Add remote for personal fork
      command: "git remote add {{ item.name }} https://github.com/{{ item.name }}/configuration.git"
      args:
        chdir: "/home/{{ item.name }}{{ path_config_src }}"
      become: true
      become_user: "{{ item.name }}"
      register: command_result
      failed_when: "command_result.stderr and 'remote {{ item.name }} already exists' not in command_result.stderr"
      when: item.type is defined and item.type == 'admin'
      with_items: "{{ COMMON_USER_INFO }}"
      tags:
        - users
        - src
    - name: Add deploy helper scripts
      lineinfile:
        create: yes
        dest: "/home/{{ item.name }}/.bashrc"
        line: "source ${HOME}{{ path_config_src }}/stanford/bin/startup.sh"
      when: item.type is defined and item.type == 'admin'
      with_items: "{{ COMMON_USER_INFO }}"
      tags:
        - startup
